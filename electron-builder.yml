appId: com.electron.app
productName: mygoside
directories:
  buildResources: build
files:
  - 'src/**'        # ✅ 包含开发代码
  - 'resources/**'  # ✅ 包含静态资源
  - 'out/**'

  #- '!src/**'         # 排除 src 文件夹中的所有文件
  - '!**/.vscode/*'   # 排除 .vscode 文件夹
  - '!electron.vite.config.{js,ts,mjs,cjs}'  # 排除构建配置文件
  - '!{.eslintcache,eslint.config.mjs,.prettierignore,.prettierrc.yaml,dev-app-update.yml,CHANGELOG.md,README.md}'  # 排除其他不需要的文件
  - '!{.env,.env.*,.npmrc,pnpm-lock.yaml}'  # 排除环境变量和锁定文件

asarUnpack:
  - 'resources/**'   # 确保 resources 文件夹中的文件不会被压缩到 asar 中
  - 'src/**'

extraResources:
  - from: resources/chat
    to: chat
    
  - from: resources/chat/dist/aibox5.0.exe
    to: aibox5.0.exe
win:
  executableName: mygoside
  icon: resources/icon.png
nsis:
  artifactName: ${name}-${version}-setup.${ext}
  shortcutName: ${productName}
  uninstallDisplayName: ${productName}
  createDesktopShortcut: always
mac:
  entitlementsInherit: build/entitlements.mac.plist
  extendInfo:
    - NSCameraUsageDescription: Application requests access to the device's camera.
    - NSMicrophoneUsageDescription: Application requests access to the device's microphone.
    - NSDocumentsFolderUsageDescription: Application requests access to the user's Documents folder.
    - NSDownloadsFolderUsageDescription: Application requests access to the user's Downloads folder.
  notarize: false
  icon: resources/icon.png
dmg:
  artifactName: ${name}-${version}.${ext}
linux:
  target:
    - AppImage
    - snap
    - deb
  maintainer: electronjs.org
  category: Utility
  icon: resources/icon.png
appImage:
  artifactName: ${name}-${version}.${ext}
npmRebuild: false
publish:
  provider: generic
  url: https://example.com/auto-updates
electronDownload:
  mirror: https://npmmirror.com/mirrors/electron/
